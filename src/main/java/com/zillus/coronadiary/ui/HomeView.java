/*******************************************************************************
 * Copyright 2021 Frank Zillus
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 ******************************************************************************/

package com.zillus.coronadiary.ui;

import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.html.H1;
import com.vaadin.flow.component.html.H2;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.router.Route;
import com.zillus.coronadiary.HasTitle;
import com.zillus.coronadiary.dal.PersonDAO;
import com.zillus.coronadiary.dal.RandomDAO;
import com.zillus.coronadiary.dal.TreatmentDAO;


@Route(value = "", layout = MainLayout.class)
public class HomeView extends VerticalLayout implements HasTitle
{
	public HomeView()
	{
		super();
		this.initUI();
		this.initData();
	}
	
	/**
	 * Inits the data.
	 */
	private void initData()
	{
		this.h2Entries.setText("Number of Diary Entries: " + TreatmentDAO.findAll().size());
		this.h2Patient.setText("Number of Patients: " + PersonDAO.findAllPatients().size());
		this.h2Medicals.setText("Number of Medicals: " + PersonDAO.findAllMedicals().size());
	}
	
	/**
	 * Creates the random medicals.
	 */
	private void createRandomMedicals()
	{
		PersonDAO.storeMedicals(RandomDAO.createMedicals(200));
		this.initData();
	}
	
	/**
	 * Creates the random patients.
	 */
	private void createRandomPatients()
	{
		PersonDAO.storePatients(RandomDAO.createPatients(200));
		this.initData();
	}
	
	/**
	 * Gets the title.
	 *
	 * @return the title
	 */
	@Override
	public String getTitle()
	{
		return "Home";
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #btnPatients}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnPatients_onClick(final ClickEvent<Button> event)
	{
		this.createRandomPatients();
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #btnMedicals}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnMedicals_onClick(final ClickEvent<Button> event)
	{
		this.createRandomMedicals();
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.headLine          = new H1();
		this.h22               = new H2();
		this.horizontalLayout2 = new HorizontalLayout();
		this.h2Patient         = new H2();
		this.btnPatients       = new Button();
		this.horizontalLayout3 = new HorizontalLayout();
		this.h2Medicals        = new H2();
		this.btnMedicals       = new Button();
		this.horizontalLayout  = new HorizontalLayout();
		this.h2Entries         = new H2();
		this.btnEntries        = new Button();
		
		this.setSpacing(false);
		this.headLine.setText("Corona Diary");
		this.headLine.getStyle().set("font-family", "times");
		this.headLine.getStyle().set("color", "Orange");
		this.h22.setText("by Frank Zillus 2021");
		this.h2Patient.setText("none");
		this.btnPatients.setText("Patient TestData");
		this.h2Medicals.setText("none");
		this.btnMedicals.setText("Medical TestData");
		this.h2Entries.setText("none");
		this.btnEntries.setText("Diary TestData");
		
		this.h2Patient.setWidthFull();
		this.h2Patient.setHeight(null);
		this.btnPatients.setWidthFull();
		this.btnPatients.setHeight(null);
		this.horizontalLayout2.add(this.h2Patient, this.btnPatients);
		this.horizontalLayout2.setVerticalComponentAlignment(FlexComponent.Alignment.CENTER, this.h2Patient);
		this.horizontalLayout2.setVerticalComponentAlignment(FlexComponent.Alignment.CENTER, this.btnPatients);
		this.h2Medicals.setWidthFull();
		this.h2Medicals.setHeight(null);
		this.btnMedicals.setWidthFull();
		this.btnMedicals.setHeight(null);
		this.horizontalLayout3.add(this.h2Medicals, this.btnMedicals);
		this.horizontalLayout3.setVerticalComponentAlignment(FlexComponent.Alignment.CENTER, this.h2Medicals);
		this.horizontalLayout3.setVerticalComponentAlignment(FlexComponent.Alignment.CENTER, this.btnMedicals);
		this.h2Entries.setWidthFull();
		this.h2Entries.setHeight(null);
		this.btnEntries.setWidthFull();
		this.btnEntries.setHeight(null);
		this.horizontalLayout.add(this.h2Entries, this.btnEntries);
		this.horizontalLayout.setVerticalComponentAlignment(FlexComponent.Alignment.CENTER, this.h2Entries);
		this.horizontalLayout.setVerticalComponentAlignment(FlexComponent.Alignment.CENTER, this.btnEntries);
		this.headLine.setSizeUndefined();
		this.h22.setSizeUndefined();
		this.horizontalLayout2.setWidthFull();
		this.horizontalLayout2.setHeight(null);
		this.horizontalLayout3.setWidthFull();
		this.horizontalLayout3.setHeight(null);
		this.horizontalLayout.setWidthFull();
		this.horizontalLayout.setHeight(null);
		this.add(this.headLine, this.h22, this.horizontalLayout2, this.horizontalLayout3, this.horizontalLayout);
		this.setHorizontalComponentAlignment(FlexComponent.Alignment.CENTER, this.headLine);
		this.setSizeUndefined();
		
		this.btnPatients.addClickListener(this::btnPatients_onClick);
		this.btnMedicals.addClickListener(this::btnMedicals_onClick);
	} // </generated-code>
	
	// <generated-code name="variables">
	private Button           btnEntries, btnPatients, btnMedicals;
	private H1               headLine;
	private HorizontalLayout horizontalLayout, horizontalLayout2, horizontalLayout3;
	private H2               h22, h2Entries, h2Patient, h2Medicals;
	// </generated-code>
	
}
