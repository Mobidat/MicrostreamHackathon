
package com.zillus.coronadiary.ui.gencolumn;

import com.flowingcode.vaadin.addons.ironicons.IronIcons;
import com.rapidclipse.framework.server.data.renderer.RenderedComponent;
import com.rapidclipse.framework.server.ui.UIUtils;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.zillus.coronadiary.dal.TreatmentDAO;
import com.zillus.coronadiary.domain.AbstractTreatmentEntity;
import com.zillus.coronadiary.ui.TreatmentView;
import com.zillus.coronadiary.ui.popup.RemoveDialog;


public class GenColTreatmentDetail extends HorizontalLayout implements RenderedComponent<AbstractTreatmentEntity>
{
	
	private AbstractTreatmentEntity treatment;
	
	/**
	 *
	 */
	public GenColTreatmentDetail()
	{
		super();
		this.initUI();
	}
	
	@Override
	public void renderComponent(final AbstractTreatmentEntity value)
	{
		this.treatment = value;
	}

	/**
	 * Show remove dialog.
	 */
	private void showRemoveDialog()
	{
		final RemoveDialog dialog = new RemoveDialog()
			.setText(this.treatment.getName())
			.setOkListener(() -> {

				final TreatmentView treatmentView = UIUtils.getNextParent(this, TreatmentView.class);
				TreatmentDAO.removeEntity(this.treatment);
				treatmentView.refresh();
			})
			.setCancelListener(() -> {});
		dialog.open();
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #btnEdit}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnEdit_onClick(final ClickEvent<Button> event)
	{
		// TODO
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #btnDelete}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnDelete_onClick(final ClickEvent<Button> event)
	{
		this.showRemoveDialog();
	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.btnEdit   = new Button();
		this.btnDelete = new Button();

		this.setSpacing(false);
		this.btnEdit.addThemeVariants(ButtonVariant.LUMO_SMALL, ButtonVariant.LUMO_TERTIARY);
		this.btnEdit.setIcon(IronIcons.SEARCH.create());
		this.btnDelete.addThemeVariants(ButtonVariant.LUMO_SMALL, ButtonVariant.LUMO_TERTIARY,
			ButtonVariant.LUMO_ERROR);
		this.btnDelete.setIcon(VaadinIcon.TRASH.create());

		this.btnEdit.setSizeUndefined();
		this.btnDelete.setSizeUndefined();
		this.add(this.btnEdit, this.btnDelete);
		this.setSizeUndefined();

		this.btnEdit.addClickListener(this::btnEdit_onClick);
		this.btnDelete.addClickListener(this::btnDelete_onClick);
	} // </generated-code>

	// <generated-code name="variables">
	private Button btnEdit, btnDelete;
	// </generated-code>

}
